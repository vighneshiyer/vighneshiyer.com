@use '../node_modules/utopia-core-scss/src/utopia' as utopia;
@import url('https://fonts.googleapis.com/css2?family=Source+Code+Pro:ital,wght@0,200..900;1,200..900&family=Source+Sans+3:ital,wght@0,200..900;1,200..900&family=Source+Serif+4:ital,opsz,wght@0,8..60,200..900;1,8..60,200..900&display=swap');

// Utopia type scale, space scale, and grid using spacing scale
/* @link https://utopia.fyi/grid/calculator?c=340,16,1.125,1800,18,1.2,5,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l&g=s,2xl,2xl,12 */

$min-width: 340;
$max-width: 1800;
$min-font-size: 16;
$max-font-size: 18;

:root {
  @include utopia.generateTypeScale((
    "minWidth": $min-width,
    "maxWidth": $max-width,
    "minFontSize": $min-font-size,
    "maxFontSize": $max-font-size,
    "minTypeScale": 1.125,
    "maxTypeScale": 1.2,
    "positiveSteps": 4,
    "negativeSteps": 2,
    /* Optional params */
    "relativeTo": "viewport",
    "prefix": "step-",
  ));

  @include utopia.generateSpaceScale((
    "minWidth": $min-width,
    "maxWidth": $max-width,
    "minSize": $min-font-size,
    "maxSize": $max-font-size,
    "positiveSteps": (1.5, 2, 3, 4, 6), // m, l, xl, 2xl, 3xl
    "negativeSteps": (0.75, 0.5, 0.25, 0.125, 0.0625), // xs, 2xs, 3xs, 4xs, 5xs
    /* Optional params */
    "customSizes": ("s-l","s-2xl"),
    "usePx": false,
    "relativeTo": "viewport",
    "prefix": "space-",
    "allPairs": false,
  ));
}

:root {
  --grid-max-width: 112.50rem;
  --grid-gutter: var(--space-s-2xl, clamp(1rem, 0.1849rem + 3.8356vw, 4.5rem));
  --grid-columns: 12;
}

@mixin u-container {
  max-width: var(--grid-max-width);
  padding-inline: var(--grid-gutter);
  margin-inline: auto;
}

@mixin u-grid {
  display: grid;
  column-gap: var(--grid-gutter); // I used column-gap over gap to remove any inter-row spacing
  grid-template-columns: repeat(var(--grid-columns), 1fr);
}

:root {
  --inset-content-begin: 5;
  --inset-content-end: 8;
  --content-begin: 3;
  --grid-middle: 6;
  --content-end: 11;
  --popout-begin: 3;
  --popout-end: 10;
  @media screen and (max-width: 600px) {
    --content-begin: 1;
    --content-end: 13;
  }
}

:root {
  --serif-font: 'Source Serif 4', 'Noto Serif', serif;
  --sans-font: 'Source Sans 3', 'Noto Sans',sans-serif;
  --code-font: 'Source Code Pro', monospace;
  font-optical-sizing: auto;
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  text-size-adjust: 100%;
  font-style: normal;

  color-scheme: dark; /*--var(--color-scheme, light);*/
  /* Light Tokyonight colors by default, generated from https://github.com/folke/tokyonight.nvim/blob/main/lua/tokyonight/colors/day.lua */
  /* Base colors */
  --bg: #d5d6db;           /* Editor background */
  --bg-dark: #3b3f56;      /* blend(bg, 0.9, fg) */
  --bg-dark1: #373d54;     /* blend(bg-dark, 0.9, fg) */
  --bg-highlight: #e6e7ed; /* lighter highlight for light mode */
  --fg: #343b58;           /* Editor foreground */
  --fg-dark: #565a6e;      /* for comments, less contrast text */
  --fg-gutter: #40434f;    /* gutter / line numbers */

  /* Syntax colors */
  --comment: #6c6e75;
  --cyan: #0f4b6e;
  --blue: #2959aa;
  --blue0: #0f4b6e;
  --blue1: #33635c;
  --blue2: #0f4b6e;
  --blue5: #7dcfff;
  --blue6: #b4f9f8;
  --blue7: #394b70;
  --green: #33635c;
  --green1: #385f0d;
  --green2: #33635c;
  --magenta: #5a3e8e;
  --magenta2: #5a3e8e;
  --orange: #965027;
  --purple: #5a4a78;
  --red: #8c4351;
  --red1: #965027;
  --teal: #006c86;
  --yellow: #8f5e15;
  --terminal-black: #0f0f14;

  /* Git colors (if relevant) */
  /* You can copy these from dark theme or define new ones */
  --git-add: #33635c;
  --git-change: #2959aa;
  --git-delete: #8c4351;

  /* Override with dark colors if preferred */
  @media (prefers-color-scheme: dark) {
    --color-scheme: dark;
    /* https://github.com/folke/tokyonight.nvim/blob/main/lua/tokyonight/colors/storm.lua */
    --bg: #24283b;
    --bg-dark: #1f2335;
    --bg-dark1: #1b1e2d;
    --bg-highlight: #292e42;
    --blue: #7aa2f7;
    --blue0: #3d59a1;
    --blue1: #2ac3de;
    --blue2: #0db9d7;
    --blue5: #89ddff;
    --blue6: #b4f9f8;
    --blue7: #394b70;
    --comment: #565f89;
    --cyan: #7dcfff;
    --dark3: #545c7e;
    --dark5: #737aa2;
    /* --fg: #c0caf5; */
    --fg: #e6e7ed;
    --fg-dark: #a9b1d6;
    --fg-gutter: #3b4261;
    --green: #9ece6a;
    --green1: #73daca;
    --green2: #41a6b5;
    --magenta: #bb9af7;
    --magenta2: #ff007c;
    --orange: #ff9e64;
    --purple: #9d7cd8;
    --red: #f7768e;
    --red1: #db4b4b;
    --teal: #1abc9c;
    --terminal-black: #414868;
    --yellow: #e0af68;
    
    /* Git colors */
    --git-add: #449dab;
    --git-change: #6183bb;
    --git-delete: #914c54;
    
    /* https://github.com/folke/tokyonight.nvim/blob/main/lua/tokyonight/colors/night.lua */
    --bg: #1a1b26;
    --bg-dark: #16161e;
    --bg-dark1: #0C0E14;
  }
}

/* https://jakelazaroff.com/words/my-modern-css-reset/ */
@layer reset {
  *, *::before, *::after {
    box-sizing: border-box;
  }

  * {
    margin: 0;
    padding: 0;
  }

  body {
    line-height: 1.5;
  }

  img, picture, video, canvas, svg {
    display: block;
    max-inline-size: 100%;
  }

  input, button, textarea, select {
    font: inherit;
    letter-spacing: inherit;
    word-spacing: inherit;
    color: currentColor;
  }

  p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
  }

  ol, ul {
    list-style: none;
  }

  /*
  :not([class]) {
    h1#{&}, h2#{&}, h3#{&}, h4#{&}, h5#{&}, h6#{&} {
      margin-block: 0.75em;
      line-height: 1.25;
      text-wrap: balance;
      letter-spacing: -0.025ch;
    }

    p#{&}, ol#{&}, ul#{&} {
      margin-block: 1em;
    }

    ol#{&}, ul#{&} {
      padding-inline-start: 1.5em;
      list-style: revert;
    }

    li#{&} {
      margin-block: 0.5em;
    }
  }
  */
}

html {
  font-size: 16px;
}

body {
  background-color: var(--bg-dark);
  color: var(--fg);
  font-family: var(--serif-font);
  line-height: 1.5;
  -webkit-font-smoothing: subpixel-antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* Make the footer stick to the bottom of the page */
  display: flex;
  min-height: 100vh;
  flex-direction: column;
}

h1, h2, h3, h4, h5, h6 {
  font-family: var(--sans-font);
  font-weight: 600;
  text-wrap: balance;
  letter-spacing: -0.025ch;
  line-height: 1.25;
}

h1 {
  font-size: var(--step-3);
}

h2 {
  font-size: var(--step-2);
  margin-bottom: var(--space-m);
}

h3 {
  font-size: var(--step-1);
  margin-bottom: var(--space-s);
}

h4 {
  font-size: var(--step-0);
  margin-bottom: var(--space-xs);
}

strong {
  font-weight: 600;
}

p {
  font-size: var(--step-0);
  text-wrap: pretty;
  margin-bottom: var(--space-s);
  hyphens: auto;
}

ol, ul {
  list-style: revert;
  padding-inline-start: var(--space-m);
  margin-bottom: var(--space-s);
}

li {
  margin-bottom: var(--space-xs);
  font-size: var(--step-0);
}

// Nested list special cases
ul > li > ul > li {
  font-size: var(--step--1);
}

ul > li > ul {
  margin-top: var(--space-2xs);
}

ul > li:last-child {
  margin-bottom: 0;
  > ul {
    margin-bottom: 0;
  }
}

// https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/hr
hr {
  border: none;
  border-top: 3px double var(--comment);
  color: var(--orange);
  overflow: visible;
  text-align: center;
  height: 1ex;
  margin-top: var(--space-m);
  margin-bottom: var(--space-m);
  &::after {
    background: var(--bg-dark1);
    content: "⁂";
    padding: 0 var(--space-s);
    position: relative;
    top: -1.6ex;
  }
}

/* Link styling stolen from: https://sqlsync.dev/posts/stop-syncing-everything/ */
a {
  position: relative;
  display: inline;
  text-decoration: none;
  color: var(--orange);
  --bar-height: 0.2ex;
  --bar-offset: 0.2ex;
  background: linear-gradient(45deg,var(--red1) 10%,var(--orange)) no-repeat right bottom / 0 var(--bar-height);
  background-position-x: left;
  background-position-y: bottom var(--bar-offset);
  transition: background-size 0.1s ease-in-out, color 0.1s ease-in-out;
  // padding-bottom: var(--bar-offset);
  &:hover {
    color: var(--red1);
    background-size: 100% var(--bar-height);
  }
}

::selection {
  background-color: var(--bg-highlight);
}

.header-container {
  background-color: var(--bg-dark);
  // border-bottom: 1px solid var(--dark5);
  font-family: var(--sans-font);
  header {
    align-items: center;
    @include u-container;
    @include u-grid;
    padding-top: var(--space-2xs);
    padding-bottom: var(--space-2xs);
    .title {
      grid-column: 1 / var(--grid-middle);
    }
    .title a {
      text-align: left;
      font-size: var(--step-3);
      font-weight: 600;
      color: var(--fg);
      letter-spacing: -0.025ch;
      transform: none;
      background: none;
      &:hover {
        text-decoration: underline;
      }
    }
    .contact {
      grid-column: var(--grid-middle) / -1;
    }
    .contact p {
      text-align: right;
      margin: 0;
      font-size: var(--step--1);
    }
  }
}

.footer-container {
  background: var(--bg-dark);
  padding-top: var(--space-2xs);
  padding-bottom: var(--space-2xs);
  font-family: var(--sans-font);
  font-size: var(--step--1);
  color: var(--fg);
  border-bottom: var(--space-4xs) solid var(--red1);
  // border-top: 1px solid var(--dark5);
  footer {
    @include u-container;
    @include u-grid;
    .footer-content {
      text-align: center;
      grid-column: 1 / -1;
    }
  }
}

.homepage-container {
  background-color: var(--bg-dark1);
  .homepage {
    @include u-container;
    @include u-grid;
    .homepage-content {
      margin-top: var(--space-s);
      grid-column: 1 / -1;
    }
  }
}

.section {
  margin-bottom: var(--space-m);
  .section-header {
    margin-bottom: var(--space-xs);
    .section-title {
      display: inline-block;
      margin-bottom: 0;
      &::before {
        content: "§ ";
        color: var(--orange);
        margin-left: -1.4ch;
      }
      &::after {
        // content: "⁂"; asterism
        // content: "§";
        content: "·";
        font-size: var(--step-0);
        color: var(--orange);
        margin-right: var(--space-2xs);
        margin-left: var(--space-2xs);
      }
    }
    .section-description {
      color: var(--fg-dark);
      font-size: var(--step--1);
      position: relative;
      top: -0.2ex;
      display: inline-block;
    }
  }
}

.page {
  .page-title {
    display: inline-block;
    margin-bottom: var(--space-3xs);
    &::after {
      /* content: "⸙"; */
      /* content: "·"; */
      // content: "☼";
      content: "·";
      margin-right: var(--space-2xs);
      margin-left: var(--space-2xs);
      color: var(--orange);
    }
  }
  .page-date {
    color: var(--fg-dark);
    font-size: var(--step--1);
    position: relative;
    top: -0.3ex;
    display: inline-block;
  }
  .page-description {
    font-size: var(--step--1);
    margin-bottom: var(--space-xs);
  }
}

@mixin hashtag($content) {
  &::before {
    content: $content;
    color: var(--orange);
    opacity: 0.5;
    margin-right: var(--space-2xs);
  }
}

.article-title-container {
  @include u-container;
  @include u-grid;
  margin-top: var(--space-s);
  .article-title {
    margin-bottom: var(--space-m);
    grid-column: var(--content-begin) / var(--content-end);
    h1 {
      margin-bottom: var(--space-2xs);
      @include hashtag("#");
    }
    .article-description {
      font-size: var(--step-1);
      margin-bottom: var(--space-2xs);
    }
    .article-date {
      color: var(--fg-dark);
      font-size: var(--step--1);
      margin-bottom: 0;
    }
  }
}

.article-content-container {
  background-color: var(--bg-dark1);
  padding-top: var(--space-m);
}

.article-content {
  @include u-container;
  @include u-grid;
  p {
    grid-column: var(--content-begin) / var(--content-end);
  }

  ul, ol {
    grid-column: var(--content-begin) / var(--content-end);
  }

  h2, h3, h4 {
    grid-column: var(--content-begin) / var(--content-end);
  }

  h2 {
    @include hashtag("##");
  }

  h3 {
    @include hashtag("###");
  }

  h4 {
    @include hashtag("####");
  }
}

@mixin badge {
  padding-bottom: var(--space-5xs);
  padding-top: var(--space-5xs);
  padding-left: var(--space-2xs);
  padding-right: var(--space-2xs);
  border-radius: var(--space-3xs);
  font-weight: 600;
  font-size: var(--step--1);
  margin-left: var(--space-2xs);
  margin-right: var(--space-2xs);
  font-family: var(--sans-font);
  &::selection {
    color: var(--fg);
  }
}

/* This badge type is only used on the homepage */
.badge-new {
  @include badge;
  background-color: var(--blue);
  color: var(--bg-dark1);
  position: relative;
  top: -0.4ex;
}