@use '../node_modules/utopia-core-scss/src/utopia' as utopia;
@use 'sass:color';
@import url('https://fonts.googleapis.com/css2?family=Source+Code+Pro:ital,wght@0,200..900;1,200..900&family=Source+Sans+3:ital,wght@0,200..900;1,200..900&family=Source+Serif+4:ital,opsz,wght@0,8..60,200..900;1,8..60,200..900&display=swap');

// Utopia type scale, space scale, and grid using spacing scale
/* @link https://utopia.fyi/grid/calculator?c=340,16,1.125,1800,18,1.2,5,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l&g=s,2xl,2xl,12 */

$min-width: 340;
$max-width: 1800;
$min-font-size: 16;
$max-font-size: 18;

:root {
  @include utopia.generateTypeScale((
    "minWidth": $min-width,
    "maxWidth": $max-width,
    "minFontSize": $min-font-size,
    "maxFontSize": $max-font-size,
    "minTypeScale": 1.125,
    "maxTypeScale": 1.2,
    "positiveSteps": 4,
    "negativeSteps": 2,
    /* Optional params */
    "relativeTo": "viewport",
    "prefix": "step-",
  ));

  @include utopia.generateSpaceScale((
    "minWidth": $min-width,
    "maxWidth": $max-width,
    "minSize": $min-font-size,
    "maxSize": $max-font-size,
    "positiveSteps": (1.5, 2, 3, 4, 6), // m, l, xl, 2xl, 3xl
    "negativeSteps": (0.75, 0.5, 0.25, 0.125, 0.0625), // xs, 2xs, 3xs, 4xs, 5xs
    /* Optional params */
    "customSizes": ("s-l","s-2xl"),
    "usePx": false,
    "relativeTo": "viewport",
    "prefix": "space-",
    "allPairs": false,
  ));
}

:root {
  --grid-max-width: 112.50rem;
  --grid-gutter: var(--space-s-2xl, clamp(1rem, 0.1849rem + 3.8356vw, 4.5rem));
  --grid-columns: 12;
}

@mixin u-container {
  max-width: var(--grid-max-width);
  padding-inline: var(--grid-gutter);
  margin-inline: auto;
}

@mixin u-grid {
  display: grid;
  column-gap: var(--grid-gutter); // I used column-gap over gap to remove any inter-row spacing
  grid-template-columns: repeat(var(--grid-columns), 1fr);
}

:root {
  --popout-begin: 2;
  --content-begin: 3;
  --inset-content-begin: 4;
  --inset-content-end: 10;
  --content-end: 11;
  --popout-end: 12;

  --grid-middle: 6;
  @media screen and (max-width: 600px) {
    --content-begin: 1;
    --content-end: 13;
    --popout-begin: 1;
    --popout-end: 13;
  }
}

:root {
  --serif-font: 'Source Serif 4', 'Noto Serif', serif;
  --sans-font: 'Source Sans 3', 'Noto Sans',sans-serif;
  --mono-font: 'Source Code Pro', monospace;
  font-optical-sizing: auto;
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
  text-size-adjust: 100%;
  font-style: normal;
}

// https://github.com/folke/tokyonight.nvim/blob/main/lua/tokyonight/colors/night.lua
// https://github.com/folke/tokyonight.nvim/blob/main/lua/tokyonight/colors/storm.lua
$tn-dark-bg: #1a1b26;
$tn-dark-bg-dark: #16161e;
$tn-dark-bg-dark1: #0C0E14;
$tn-dark-bg-highlight: #292e42;
$tn-dark-blue: #7aa2f7;
$tn-dark-blue0: #3d59a1;
$tn-dark-blue1: #2ac3de;
$tn-dark-blue2: #0db9d7;
$tn-dark-blue5: #89ddff;
$tn-dark-blue6: #b4f9f8;
$tn-dark-blue7: #394b70;
$tn-dark-comment: #565f89;
$tn-dark-cyan: #7dcfff;
$tn-dark-dark3: #545c7e;
$tn-dark-dark5: #737aa2;
$tn-dark-fg: #c0caf5;
$tn-dark-fg: color.lighten($tn-dark-fg, 10%); // Override the fg color, the default one is too dark for sufficient contrast
$tn-dark-fg-dark: #a9b1d6;
$tn-dark-fg-gutter: #3b4261;
$tn-dark-green: #9ece6a;
$tn-dark-green1: #73daca;
$tn-dark-green2: #41a6b5;
$tn-dark-magenta: #bb9af7;
$tn-dark-magenta2: #ff007c;
$tn-dark-orange: #ff9e64;
$tn-dark-purple: #9d7cd8;
$tn-dark-red: #f7768e;
$tn-dark-red1: #db4b4b;
$tn-dark-teal: #1abc9c;
$tn-dark-terminal-black: #414868;
$tn-dark-yellow: #e0af68;
$tn-dark-git-add: #449dab;
$tn-dark-git-change: #6183bb;
$tn-dark-git-delete: #914c54;

// Light colors are just inverted from the dark colors
$tn-light-bg: color.invert($tn-dark-bg);
$tn-light-bg-dark: color.invert($tn-dark-bg-dark);
$tn-light-bg-dark1: color.invert($tn-dark-bg-dark1);
$tn-light-bg-highlight: color.invert($tn-dark-bg-highlight);
$tn-light-blue: color.invert($tn-dark-blue);
$tn-light-blue0: color.invert($tn-dark-blue0);
$tn-light-blue1: color.invert($tn-dark-blue1);
$tn-light-blue2: color.invert($tn-dark-blue2);
$tn-light-blue5: color.invert($tn-dark-blue5);
$tn-light-blue6: color.invert($tn-dark-blue6);
$tn-light-blue7: color.invert($tn-dark-blue7);
$tn-light-comment: color.invert($tn-dark-comment);
$tn-light-cyan: color.invert($tn-dark-cyan);
$tn-light-dark3: color.invert($tn-dark-dark3);
$tn-light-dark5: color.invert($tn-dark-dark5);
$tn-light-fg: color.invert($tn-dark-fg);
$tn-light-fg-dark: color.invert($tn-dark-fg-dark);
$tn-light-fg-gutter: color.invert($tn-dark-fg-gutter);
$tn-light-green: color.invert($tn-dark-green);
$tn-light-green1: color.invert($tn-dark-green1);
$tn-light-green2: color.invert($tn-dark-green2);
$tn-light-magenta: color.invert($tn-dark-magenta);
$tn-light-magenta2: color.invert($tn-dark-magenta2);
$tn-light-orange: color.invert($tn-dark-orange);
$tn-light-purple: color.invert($tn-dark-purple);
$tn-light-red: color.invert($tn-dark-red);
$tn-light-red1: color.invert($tn-dark-red1);
$tn-light-teal: color.invert($tn-dark-teal);
$tn-light-terminal-black: color.invert($tn-dark-terminal-black);
$tn-light-yellow: color.invert($tn-dark-yellow);
$tn-light-git-add: color.invert($tn-dark-git-add);
$tn-light-git-change: color.invert($tn-dark-git-change);
$tn-light-git-delete: color.invert($tn-dark-git-delete);
// The bg colors are blended  (see https://github.com/folke/tokyonight.nvim/blob/main/lua/tokyonight/colors/day.lua)
$tn-light-bg-dark: color.mix($tn-light-bg, $tn-light-fg, 90%);
$tn-light-bg-dark1: color.mix($tn-light-bg-dark, $tn-light-fg, 90%);
// Now we swap some colors
$tn-light-bg-dark1: $tn-light-bg;
$tn-light-bg: $tn-light-bg-dark1;

:root {
  color-scheme: --var(--color-scheme);
  --bg: #{$tn-light-bg};
  --bg-dark: #{$tn-light-bg-dark};
  --bg-dark1: #{$tn-light-bg-dark1};
  --bg-highlight: #{$tn-light-bg-highlight};
  --fg: #{$tn-light-fg};
  --fg-dark: #{$tn-light-fg-dark};
  --fg-gutter: #{$tn-light-fg-gutter};

  --comment: #{$tn-light-comment};
  --cyan: #{$tn-light-cyan};
  --blue: #{$tn-light-blue};
  --blue0: #{$tn-light-blue0};
  --blue1: #{$tn-light-blue1};
  --blue2: #{$tn-light-blue2};
  --blue5: #{$tn-light-blue5};
  --blue6: #{$tn-light-blue6};
  --blue7: #{$tn-light-blue7};
  --dark3: #{$tn-light-dark3};
  --dark5: #{$tn-light-dark5};
  --green: #{$tn-light-green};
  --green1: #{$tn-light-green1};
  --green2: #{$tn-light-green2};
  --magenta: #{$tn-light-magenta};
  --magenta2: #{$tn-light-magenta2};
  --orange: #{$tn-light-orange};
  --purple: #{$tn-light-purple};
  --red: #{$tn-light-red};
  --red1: #{$tn-light-red1};
  --teal: #{$tn-light-teal};
  --terminal-black: #{$tn-light-terminal-black};
  --yellow: #{$tn-light-yellow};
  --git-add: #{$tn-light-git-add};
  --git-change: #{$tn-light-git-change};
  --git-delete: #{$tn-light-git-delete};

  /* page preference is "dark" */
  &:has(#color-scheme input[value="dark"]:checked) {
    --color-scheme: dark;
    --bg: #{$tn-dark-bg};
    --bg-dark: #{$tn-dark-bg-dark};
    --bg-dark1: #{$tn-dark-bg-dark1};
    --bg-highlight: #{$tn-dark-bg-highlight};
    --fg: #{$tn-dark-fg};
    --fg-dark: #{$tn-dark-fg-dark};
    --fg-gutter: #{$tn-dark-fg-gutter};

    --comment: #{$tn-dark-comment};
    --cyan: #{$tn-dark-cyan};
    --blue: #{$tn-dark-blue};
    --blue0: #{$tn-dark-blue0};
    --blue1: #{$tn-dark-blue1};
    --blue2: #{$tn-dark-blue2};
    --blue5: #{$tn-dark-blue5};
    --blue6: #{$tn-dark-blue6};
    --blue7: #{$tn-dark-blue7};
    --dark3: #{$tn-dark-dark3};
    --dark5: #{$tn-dark-dark5};
    --green: #{$tn-dark-green};
    --green1: #{$tn-dark-green1};
    --green2: #{$tn-dark-green2};
    --magenta: #{$tn-dark-magenta};
    --magenta2: #{$tn-dark-magenta2};
    --orange: #{$tn-dark-orange};
    --purple: #{$tn-dark-purple};
    --red: #{$tn-dark-red};
    --red1: #{$tn-dark-red1};
    --teal: #{$tn-dark-teal};
    --terminal-black: #{$tn-dark-terminal-black};
    --yellow: #{$tn-dark-yellow};
    --git-add: #{$tn-dark-git-add};
    --git-change: #{$tn-dark-git-change};
    --git-delete: #{$tn-dark-git-delete};
  }

  @media (prefers-color-scheme: dark) {
    &:has(#color-scheme input[value="dark"]:checked) {
      --bg: #{$tn-dark-bg};
      --bg-dark: #{$tn-dark-bg-dark};
      --bg-dark1: #{$tn-dark-bg-dark1};
      --bg-highlight: #{$tn-dark-bg-highlight};
      --fg: #{$tn-dark-fg};
      --fg-dark: #{$tn-dark-fg-dark};
      --fg-gutter: #{$tn-dark-fg-gutter};

      --comment: #{$tn-dark-comment};
      --cyan: #{$tn-dark-cyan};
      --blue: #{$tn-dark-blue};
      --blue0: #{$tn-dark-blue0};
      --blue1: #{$tn-dark-blue1};
      --blue2: #{$tn-dark-blue2};
      --blue5: #{$tn-dark-blue5};
      --blue6: #{$tn-dark-blue6};
      --blue7: #{$tn-dark-blue7};
      --dark3: #{$tn-dark-dark3};
      --dark5: #{$tn-dark-dark5};
      --green: #{$tn-dark-green};
      --green1: #{$tn-dark-green1};
      --green2: #{$tn-dark-green2};
      --magenta: #{$tn-dark-magenta};
      --magenta2: #{$tn-dark-magenta2};
      --orange: #{$tn-dark-orange};
      --purple: #{$tn-dark-purple};
      --red: #{$tn-dark-red};
      --red1: #{$tn-dark-red1};
      --teal: #{$tn-dark-teal};
      --terminal-black: #{$tn-dark-terminal-black};
      --yellow: #{$tn-dark-yellow};
      --git-add: #{$tn-dark-git-add};
      --git-change: #{$tn-dark-git-change};
      --git-delete: #{$tn-dark-git-delete};
    }
  }
}

@import "../node_modules/highlight.js/scss/tokyo-night-light.scss";
@media (prefers-color-scheme: dark) {
  @import "../node_modules/highlight.js/scss/tokyo-night-dark.scss";
}

/* https://jakelazaroff.com/words/my-modern-css-reset/ */
@layer reset {
  *, *::before, *::after {
    box-sizing: border-box;
  }

  * {
    margin: 0;
    padding: 0;
  }

  body {
    line-height: 1.5;
  }

  img, picture, video, canvas, svg {
    display: block;
    max-inline-size: 100%;
  }

  input, button, textarea, select {
    font: inherit;
    letter-spacing: inherit;
    word-spacing: inherit;
    color: currentColor;
  }

  p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
  }

  ol, ul {
    list-style: none;
  }

  /*
  :not([class]) {
    h1#{&}, h2#{&}, h3#{&}, h4#{&}, h5#{&}, h6#{&} {
      margin-block: 0.75em;
      line-height: 1.25;
      text-wrap: balance;
      letter-spacing: -0.025ch;
    }

    p#{&}, ol#{&}, ul#{&} {
      margin-block: 1em;
    }

    ol#{&}, ul#{&} {
      padding-inline-start: 1.5em;
      list-style: revert;
    }

    li#{&} {
      margin-block: 0.5em;
    }
  }
  */
}

html {
  font-size: 16px;
}

body {
  background-color: var(--bg-dark);
  color: var(--fg);
  font-family: var(--serif-font);
  line-height: 1.5;
  -webkit-font-smoothing: subpixel-antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* Make the footer stick to the bottom of the page */
  display: flex;
  min-height: 100vh;
  flex-direction: column;
}

h1, h2, h3, h4, h5, h6 {
  font-family: var(--sans-font);
  font-weight: 600;
  text-wrap: balance;
  letter-spacing: -0.025ch;
  line-height: 1.25;
}

h1 {
  font-size: var(--step-3);
}

h2 {
  font-size: var(--step-2);
  margin-bottom: var(--space-m);
}

h3 {
  font-size: var(--step-1);
  margin-bottom: var(--space-s);
}

h4 {
  font-size: var(--step-0);
  margin-bottom: var(--space-xs);
}

strong {
  font-weight: 600;
}

p {
  font-size: var(--step-0);
  text-wrap: pretty;
  margin-bottom: var(--space-s);
  hyphens: auto;
}

ol, ul {
  list-style: none;
  margin-bottom: var(--space-s);
}

li {
  margin-bottom: var(--space-s);
  margin-left: var(--space-l);
  font-size: var(--step-0);
}

@counter-style custom-circled {
  system: fixed;
  symbols: '⓵' '⓶' '⓷' '⓸' '⓹' '⓺' '⓻' '⓼' '⓽' '⓾';
  suffix: " ";
}

ol {
  list-style: none;
}

ol > li::before {
  content: counter(list-item, custom-circled);
  color: var(--blue);
  font-size: var(--step-2);
  position: absolute;
  margin-left: calc(var(--space-l) * -1);
  font-weight: 400;
  margin-top: -0.4ex;
}

ol > li > ul > li {
  margin-left: var(--space-l);
  &:before {
    margin-left: calc(var(--space-l) * -1);
  }
}

ol > li > ul {
  margin-top: var(--space-xs);
  margin-bottom: var(--space-s);
}

ul > li:before {
  // content: "✶";
  // content: "◍";
  content: "◉";
  // content: "›";
  color: var(--blue);
  font-size: var(--step-0);;
  position: absolute;
  margin-left: calc(var(--space-l) * -1);
}

// Nested list special cases
ul > li > ul > li {
  font-size: var(--step--1);
  &:before {
    content: "◍";
    font-size: var(--step--1);
  }
}

ul > li > ul {
  margin-top: var(--space-xs);
  margin-bottom: var(--space-s);
}

ul > li:last-child {
  margin-bottom: 0;
  > ul {
    margin-bottom: 0;
  }
  > p {
    margin-bottom: 0;
  }
}

ol > li:last-child {
  margin-bottom: 0;
}

// https://practicaltypography.com/block-quotations.html
blockquote {
  * {
    font-size: var(--step--1);
    &:last-child {
      margin-bottom: 0;
    }
  }
  background-color: var(--bg-dark);
  padding-top: var(--space-m);
  padding-bottom: var(--space-m);
  padding-left: var(--space-m);
  padding-right: var(--space-m);
  margin-left: var(--space-s);
  margin-right: var(--space-s);
  border-left: var(--space-3xs) solid var(--orange);
  margin-bottom: var(--space-m);
}

figure {
  margin-bottom: var(--space-m);
  text-align: center;
  img {
    margin: auto;
  }
  img.padding {
    background: white;
    padding: var(--space-s);
  }
  video {
    margin: auto;
  }
}

// https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/hr
hr {
  border: none;
  border-top: 3px double var(--comment);
  color: var(--orange);
  overflow: visible;
  text-align: center;
  height: 1ex;
  margin-top: var(--space-m);
  margin-bottom: var(--space-m);
  &::after {
    background: var(--bg-dark1);
    content: "⁂";
    padding: 0 var(--space-s);
    position: relative;
    top: -1.6ex;
  }
}

/* Link styling stolen from: https://sqlsync.dev/posts/stop-syncing-everything/ */
a {
  position: relative;
  display: inline;
  text-decoration: none;
  color: var(--orange);
  --bar-height: 0.2ex;
  --bar-offset: 0.2ex;
  background: linear-gradient(45deg,var(--red1) 10%,var(--orange)) no-repeat right bottom / 0 var(--bar-height);
  background-position-x: left;
  background-position-y: bottom var(--bar-offset);
  transition: background-size 0.1s ease-in-out, color 0.1s ease-in-out;
  // padding-bottom: var(--bar-offset);
  &:hover {
    color: var(--red1);
    background-size: 100% var(--bar-height);
  }
}

a:has(img) {
  background: none;
  color: inherit;
  &:hover {
    background: none;
    color: inherit;
  }
}

a.anchor {
  background: none;
  color: inherit;
  &:hover {
    color: var(--orange);
  }
}

::selection {
  background-color: var(--bg-highlight);
}

pre {
  margin-bottom: var(--space-s);
  code {
    font-family: var(--mono-font);
  }
}
pre:has(code) {
  padding: var(--space-s);
}

p > code {
  font-family: var(--mono-font);
  font-size: var(--step--1);
  padding-left: var(--space-3xs);
  padding-right: var(--space-3xs);
  margin-left: var(--space-4xs);
  margin-right: var(--space-4xs);
  padding-top: var(--space-4xs);
  padding-bottom: var(--space-4xs);
  background-color: var(--bg);
}

details {
  margin-bottom: var(--space-s);
  padding-left: var(--space-l);
  padding-right: var(--space-l);
  padding-top: var(--space-s);
  padding-bottom: var(--space-s);
  background-color: var(--bg-dark);
  summary {
    font-size: var(--step-0);
    cursor: pointer;
  }
  &:open {
    padding-bottom: 0;
  }
  &:open summary {
    margin-bottom: var(--space-m);
  }
}

.header-container {
  @include u-container;
  @include u-grid;
  width: 100%;
  background-color: var(--bg-dark);
  // border-bottom: 1px solid var(--dark5);
  font-family: var(--sans-font);
  padding-top: var(--space-2xs);
  padding-bottom: var(--space-2xs);
  header {
    grid-column: var(--content-begin) / var(--content-end);
    display: flex;
    flex-direction: row;
    // align-items: center;
    .spacer {
      flex-grow: 1;
    }
    .title a {
      text-align: left;
      font-size: var(--step-3);
      font-weight: 600;
      color: var(--fg);
      letter-spacing: -0.025ch;
      transform: none;
      background: none;
      &:hover {
        text-decoration: underline;
      }
    }
    .contact p {
      text-align: right;
      margin: 0;
      font-size: var(--step--1);
    }
    #color-scheme {
      margin-left: var(--space-s);
      display: grid;
      align-items: center;
      input[type="radio"] {
        appearance: none;
      }
      .light {
        display: inline-block;
        background: var(--bg-highlight);
        padding-left: var(--space-2xs);
        padding-right: var(--space-2xs);
        padding-top: var(--space-3xs);
        padding-bottom: var(--space-3xs);
        border-radius: var(--space-2xs);
        cursor: pointer;
        &:before {
          content: "🌞";
          // content: "☼";
          // content: "☉";
          // color: var(--orange);
          font-size: var(--step--1);
        }
      }
      .dark {
        display: inline-block;
        background: var(--orange);
        padding-left: var(--space-2xs);
        padding-right: var(--space-2xs);
        padding-top: var(--space-3xs);
        padding-bottom: var(--space-3xs);
        border-radius: var(--space-2xs);
        cursor: pointer;
        &:before {
          content: "🌙";
          // content: "☾";
          // color: var(--blue);
          font-size: var(--step--1);
        }
      }
    }
  }
}

:root:has(#color-scheme input[value="dark"]:checked) {
  --color-scheme: dark;
  #color-scheme .dark{
    display: none;
  }
}

:root:has(#color-scheme input[value="light"]:checked) {
  --color-scheme: light;
  #color-scheme .light{
    display: none;
  }
}

.footer-container {
  background: var(--bg-dark);
  padding-top: var(--space-2xs);
  padding-bottom: var(--space-2xs);
  font-family: var(--sans-font);
  font-size: var(--step--1);
  color: var(--fg);
  border-bottom: var(--space-4xs) solid var(--red1);
  // border-top: 1px solid var(--dark5);
  footer {
    @include u-container;
    @include u-grid;
    .footer-content {
      text-align: center;
      grid-column: 1 / -1;
    }
  }
}

.homepage-container {
  background-color: var(--bg-dark1);
  .homepage {
    @include u-container;
    @include u-grid;
    .homepage-content {
      margin-top: var(--space-s);
      grid-column: var(--content-begin) / var(--content-end);
    }
  }
}

.section {
  margin-bottom: var(--space-m);
  .section-header {
    margin-bottom: var(--space-xs);
    .section-title {
      display: inline-block;
      margin-bottom: 0;
      &::before {
        content: "§ ";
        color: var(--orange);
        margin-left: -1.4ch;
      }
      &::after {
        // content: "⁂"; asterism
        // content: "§";
        content: "·";
        font-size: var(--step-0);
        color: var(--orange);
        margin-right: var(--space-2xs);
        margin-left: var(--space-2xs);
      }
    }
    .section-description {
      color: var(--fg-dark);
      font-size: var(--step--1);
      position: relative;
      top: -0.2ex;
      display: inline-block;
    }
  }
}

.page {
  .page-title {
    display: inline-block;
    margin-bottom: var(--space-3xs);
    &::after {
      /* content: "⸙"; */
      /* content: "·"; */
      // content: "☼";
      content: "·";
      margin-right: var(--space-2xs);
      margin-left: var(--space-2xs);
      color: var(--orange);
    }
  }
  .page-date {
    color: var(--fg-dark);
    font-size: var(--step--1);
    position: relative;
    top: -0.3ex;
    display: inline-block;
  }
  .page-description {
    font-size: var(--step--1);
    margin-bottom: var(--space-xs);
  }
}

@mixin hashtag($content) {
  &::before {
    content: $content;
    color: var(--orange);
    opacity: 0.5;
    margin-right: var(--space-2xs);
    transition: opacity 0.1s ease-in-out, text-decoration 0.1s ease-in-out;
  }
  &:hover {
    &::before {
      opacity: 0.75;
      // text-decoration: underline var(--space-4xs) var(--red);
    }
  }
}

.article-title-container {
  @include u-container;
  @include u-grid;
  margin-top: var(--space-s);
  .article-title {
    margin-bottom: var(--space-m);
    grid-column: var(--content-begin) / var(--content-end);
    h1 {
      margin-bottom: var(--space-2xs);
      @include hashtag("#");
    }
    .article-description {
      font-size: var(--step-1);
      margin-bottom: var(--space-2xs);
    }
    .article-date {
      color: var(--fg-dark);
      font-size: var(--step--1);
      margin-bottom: 0;
    }
  }
}

.article-content-container {
  background-color: var(--bg-dark1);
  padding-top: var(--space-m);
}

.article-content {
  @include u-container;
  @include u-grid;
  p {
    grid-column: var(--content-begin) / var(--content-end);
  }

  ul, ol {
    grid-column: var(--content-begin) / var(--content-end);
  }

  h2, h3, h4 {
    grid-column: var(--content-begin) / var(--content-end);
    display: inline-block;
    width: fit-content;
  }

  h2 {
    @include hashtag("##");
  }

  h3 {
    @include hashtag("###");
  }

  h4 {
    @include hashtag("####");
  }

  blockquote {
    grid-column: var(--content-begin) / var(--content-end);
  }
  figure {
    grid-column: var(--content-begin) / var(--content-end);
  }
  figure.popout {
    grid-column: var(--popout-begin) / var(--popout-end);
    margin-top: var(--space-s); // A bit more space for popout images
  }
  figure {
    .gallery-grid {
      // display: flex;
      // flex-direction: column;
      // gap: var(--space-2xs);
      box-sizing: border-box;
    }

    .gallery-row {
      display: flex;
      flex-direction: row;
      justify-content: center;
      gap: var(--space-3xs);
      margin-bottom: var(--space-3xs);
      &:last-child {
        margin-bottom: 0;
      }
    }

    .gallery-row img {
      height: auto;
      // max-height: 300px;
      width: 100%;
      display: block;
      object-fit: contain;
      cursor: pointer;
    }
  }
  details {
    grid-column: var(--content-begin) / var(--content-end);
  }
  pre {
    grid-column: var(--content-begin) / var(--content-end);
  }
  div.callout {
    grid-column: var(--inset-content-begin) / var(--inset-content-end);
    background-color: var(--bg-dark);
    padding: var(--space-s);
    border-radius: var(--space-2xs);
    border: 1px solid var(--dark5);
    margin-bottom: var(--space-s);
    .callout-title {
      font-family: var(--sans-font);
      font-size: var(--step-1);
      font-weight: 700;
      margin-bottom: var(--space-3xs);
    }
  }
}

@mixin badge {
  padding-bottom: var(--space-5xs);
  padding-top: var(--space-5xs);
  padding-left: var(--space-2xs);
  padding-right: var(--space-2xs);
  border-radius: var(--space-3xs);
  font-weight: 600;
  font-size: var(--step--1);
  margin-left: var(--space-2xs);
  margin-right: var(--space-2xs);
  font-family: var(--sans-font);
  &::selection {
    color: var(--fg);
  }
}

/* This badge type is only used on the homepage */
.badge-new {
  @include badge;
  background-color: var(--blue);
  color: var(--bg-dark1);
  position: relative;
  top: -0.4ex;
}